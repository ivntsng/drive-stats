name: CI Pipeline

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        services:
            docker:
                image: docker:dind
                options: --privileged

        steps:
            - uses: actions/checkout@v2

            - name: Set up Docker Compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Create Docker Volume
              run: docker volume create --name=drive-statsDB

            - name: Build and start services (including Flyway)
              run: docker-compose up -d

            - name: List running containers
              run: docker ps

            - name: Show Docker Compose Logs
              run: docker-compose logs

            - name: Wait for PostgreSQL to be ready
              run: |
                  echo "Waiting for PostgreSQL to be ready..."
                  until docker exec $(docker ps --filter name=postgres -q) pg_isready -U casper -d postgres; do
                    echo "Checking PostgreSQL readiness..."
                    sleep 5
                  done

            - name: Create Test Database
              run: |
                  echo "Checking if test database exists..."
                  if ! docker exec $(docker ps --filter name=postgres -q) psql -U casper -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='test_drivestats_db'" | grep -q 1; then
                    echo "Creating test database..."
                    docker exec $(docker ps --filter name=postgres -q) psql -U casper -d postgres -c "CREATE DATABASE test_drivestats_db;"
                  else
                    echo "Test database already exists."
                  fi

            - name: Check Flyway Logs
              run: |
                  echo "Checking Flyway logs..."
                  docker logs $(docker ps -a --filter "name=drive-stats_flyway_1" --filter "status=exited" -q)

            - name: Wait for FastAPI to be ready
              run: |
                  echo "Waiting for FastAPI to be ready..."
                  for i in {1..10}; do
                    if docker exec $(docker ps --filter name=fastapi -q) curl -f http://localhost:8000/; then
                      echo "FastAPI is ready!"
                      break
                    else
                      echo "Checking FastAPI readiness..."
                      docker ps -a
                      docker logs $(docker ps --filter name=fastapi -q)
                      sleep 10
                    fi
                  done

            - name: Install dependencies
              run: docker exec $(docker ps --filter name=fastapi -q) pip install -r /app/requirements.txt

            - name: Lint with flake8
              run: docker exec $(docker ps --filter name=fastapi -q) flake8 /app

            # - name: Run tests
            #   env:
            #       DATABASE_URL: "postgresql://casper:foTVdhgYZzz8bOL6e@postgres/test_drivestats_db"
            #       SIGNING_KEY: "2e2f446477efb5db3c21276786a5d7a431b671ab440fdf8d7e84368cc198b562" # Ensure the signing key is set
            #   run: docker exec $(docker ps --filter name=fastapi -q) python -m pytest /app

            - name: Drop Test Database
              run: docker exec $(docker ps --filter name=postgres -q) psql -U casper -d postgres -c "DROP DATABASE IF EXISTS test_drivestats_db;"

            - name: Cleanup
              run: docker-compose down

        env:
            DATABASE_URL: "postgresql://casper:foTVdhgYZzz8bOL6e@postgres/drivestats_db"
            SIGNING_KEY: "2e2f446477efb5db3c21276786a5d7a431b671ab440fdf8d7e84368cc198b562" # Ensure the signing key is set
